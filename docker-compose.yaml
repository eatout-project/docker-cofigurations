version: '2.2'

networks:
  app-tier:
    driver: bridge

services:


  restaurant-db:
    image: eatout/app:restaurant-db
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports: [
      "3307:3306"
    ]
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

  reservation-db:
    image: eatout/app:reservation-db
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports: [
      "3308:3306"
    ]
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

  restaurant-login-db:
    image: eatout/app:restaurant-login-db
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports: [
      "3309:3306"
    ]
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

  customer-db:
    image: eatout/app:customer-db
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports: [
      "3310:3306"
    ]
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

 # customer-db:
    #   build: './test-databases/customer_db/'
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    #  command: --default-authentication-plugin=mysql_native_password
    #   restart: always
      #   ports: [
    #     "3310:3306"
    #   ]
      #   environment:
  #     MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

    # restaurant-db:
    #   build: './test-databases/restaurant_db/'
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    #   command: --default-authentication-plugin=mysql_native_password
    #   restart: always
      #   ports: [
    #     "3307:3306"
    #   ]
      #   environment:
  #     MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

    # reservation-db:
    #   build: './test-databases/reservation_db/'
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    #  command: --default-authentication-plugin=mysql_native_password
      #  restart: always
      #  ports: [
    #   "3308:3306"
    #  ]
      #  environment:
  #    MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

      # restaurant-login-db:
      #     build: 'test-databases/restaurant_login_db/'
      # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
      # (this is just an example, not intended to be a production configuration)
      #   command: --default-authentication-plugin=mysql_native_password
        #    restart: always
        #   ports: [
      #     "3309:3306"
      #    ]
        #    environment:
  #      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'

  eatoutcorporate:
    image: eatout/app:eatoutcorporate
    restart: always
    ports: [
      "4200:4200"
    ]

  eatoutweb:
    image: eatout/app:eatout-web
    restart: always
    ports: [
      "4201:4200"
    ]

  restaurant-service:
    image: eatout/app:restaurant-service
    restart: always
    ports: [
      "5000:5000"
    ]

  account-service:
    image: eatout/app:account-service
    restart: always
    ports: [
      "5002:5002"
    ]

  reservation-service:
    image: eatout/app:reservation-service
    restart: always
    ports: [
      "5001:5001"
    ]

  eatout-customer-service:
    image: eatout/app:eatout-customer-service
    restart: always
    ports: [
      "5004:5004"
    ]


  create-reservation-socket:
    image: eatout/app:create-reservation-socket
    restart: always
    ports: [
      "5010:5010"
    ]

  restaurant-new-reservations-socket:
    image: eatout/app:restaurant-new-reservation-socket
    restart: always
    ports: [
      "5011:5011"
    ]

  restaurant-reply-socket:
    image: eatout/app:restaurant-reply-socket
    restart: always
    ports: [
      "5012:5012"
    ]

  status-socket:
    image: eatout/app:status-socket
    restart: always
    ports: [
      "5013:5013"
    ]


  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    depends_on:
      - zookeeper

